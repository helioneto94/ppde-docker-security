{
  "version": "2.1.0",
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": [
            {
              "id": "CVE-2024-45590",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "body-parser: Denial of Service Vulnerability in body-parser"
              },
              "fullDescription": {
                "text": "body-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-45590",
              "help": {
                "text": "Vulnerability CVE-2024-45590\nSeverity: HIGH\nPackage: body-parser\nFixed Version: 1.20.3\nLink: [CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)\nbody-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.",
                "markdown": "**Vulnerability CVE-2024-45590**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|body-parser|1.20.3|[CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)|\n\nbody-parser is Node.js body parsing middleware. body-parser \u003c1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-47764",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "cookie: cookie accepts cookie name, path, and domain with out of bounds characters"
              },
              "fullDescription": {
                "text": "cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-47764",
              "help": {
                "text": "Vulnerability CVE-2024-47764\nSeverity: LOW\nPackage: cookie\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",
                "markdown": "**Vulnerability CVE-2024-47764**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|cookie|0.7.0|[CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)|\n\ncookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "2.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-33883",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "The ejs (aka Embedded JavaScript templates) package before 3.1.10 for  ..."
              },
              "fullDescription": {
                "text": "The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-33883",
              "help": {
                "text": "Vulnerability CVE-2024-33883\nSeverity: MEDIUM\nPackage: ejs\nFixed Version: 3.1.10\nLink: [CVE-2024-33883](https://avd.aquasec.com/nvd/cve-2024-33883)\nThe ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.",
                "markdown": "**Vulnerability CVE-2024-33883**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|ejs|3.1.10|[CVE-2024-33883](https://avd.aquasec.com/nvd/cve-2024-33883)|\n\nThe ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "4.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-29041",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: cause malformed URLs to be evaluated"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-29041",
              "help": {
                "text": "Vulnerability CVE-2024-29041\nSeverity: MEDIUM\nPackage: express\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3.",
                "markdown": "**Vulnerability CVE-2024-29041**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|express|4.19.2, 5.0.0-beta.3|[CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)|\n\nExpress.js minimalist web framework for node. Versions of Express.js prior to 4.19.0 and all pre-release alpha and beta versions of 5.0 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is `res.location()` but this is also called from within `res.redirect()`. The vulnerability is fixed in 4.19.2 and 5.0.0-beta.3."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "6.1",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-43796",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "express: Improper Input Handling in Express Redirects"
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43796",
              "help": {
                "text": "Vulnerability CVE-2024-43796\nSeverity: LOW\nPackage: express\nFixed Version: 4.20.0, 5.0.0\nLink: [CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)\nExpress.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",
                "markdown": "**Vulnerability CVE-2024-43796**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|express|4.20.0, 5.0.0|[CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)|\n\nExpress.js minimalist web framework for node. In express \u003c 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2024-45296",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "path-to-regexp: Backtracking regular expressions cause ReDoS"
              },
              "fullDescription": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-45296",
              "help": {
                "text": "Vulnerability CVE-2024-45296\nSeverity: HIGH\nPackage: path-to-regexp\nFixed Version: 1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0\nLink: [CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",
                "markdown": "**Vulnerability CVE-2024-45296**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|path-to-regexp|1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0|[CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)|\n\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "7.5",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-52798",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "path-to-regexp: path-to-regexp Unpatched `path-to-regexp` ReDoS in 0.1.x"
              },
              "fullDescription": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-52798",
              "help": {
                "text": "Vulnerability CVE-2024-52798\nSeverity: HIGH\nPackage: path-to-regexp\nFixed Version: 0.1.12\nLink: [CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",
                "markdown": "**Vulnerability CVE-2024-52798**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|path-to-regexp|0.1.12|[CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)|\n\npath-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "8.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "HIGH"
                ]
              }
            },
            {
              "id": "CVE-2024-43799",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "send: Code Execution Vulnerability in Send Library"
              },
              "fullDescription": {
                "text": "Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43799",
              "help": {
                "text": "Vulnerability CVE-2024-43799\nSeverity: LOW\nPackage: send\nFixed Version: 0.19.0\nLink: [CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)\nSend is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.",
                "markdown": "**Vulnerability CVE-2024-43799**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|send|0.19.0|[CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)|\n\nSend is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            },
            {
              "id": "CVE-2023-22578",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Sequelize - Default support for “raw attributes” when using parentheses"
              },
              "fullDescription": {
                "text": "Due to improper artibute filtering in the sequalize js library, can a attacker peform SQL injections."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-22578",
              "help": {
                "text": "Vulnerability CVE-2023-22578\nSeverity: CRITICAL\nPackage: sequelize\nFixed Version: 6.29.0\nLink: [CVE-2023-22578](https://avd.aquasec.com/nvd/cve-2023-22578)\nDue to improper artibute filtering in the sequalize js library, can a attacker peform SQL injections.",
                "markdown": "**Vulnerability CVE-2023-22578**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|sequelize|6.29.0|[CVE-2023-22578](https://avd.aquasec.com/nvd/cve-2023-22578)|\n\nDue to improper artibute filtering in the sequalize js library, can a attacker peform SQL injections."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "10.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-22579",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Unsafe fall-through in getWhereConditions"
              },
              "fullDescription": {
                "text": "Due to improper parameter filtering in the sequalize js library, can a attacker peform injection."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-22579",
              "help": {
                "text": "Vulnerability CVE-2023-22579\nSeverity: CRITICAL\nPackage: sequelize\nFixed Version: 6.28.1\nLink: [CVE-2023-22579](https://avd.aquasec.com/nvd/cve-2023-22579)\nDue to improper parameter filtering in the sequalize js library, can a attacker peform injection.",
                "markdown": "**Vulnerability CVE-2023-22579**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|sequelize|6.28.1|[CVE-2023-22579](https://avd.aquasec.com/nvd/cve-2023-22579)|\n\nDue to improper parameter filtering in the sequalize js library, can a attacker peform injection."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "10.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-25813",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Sequelize vulnerable to SQL Injection via replacements"
              },
              "fullDescription": {
                "text": "Sequelize is a Node.js ORM tool. In versions prior to 6.19.1 a SQL injection exploit exists related to replacements. Parameters which are passed through replacements are not properly escaped which can lead to arbitrary SQL injection depending on the specific queries in use. The issue has been fixed in Sequelize 6.19.1. Users are advised to upgrade. Users unable to upgrade should not use the `replacements` and the `where` option in the same query."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-25813",
              "help": {
                "text": "Vulnerability CVE-2023-25813\nSeverity: CRITICAL\nPackage: sequelize\nFixed Version: 6.19.1\nLink: [CVE-2023-25813](https://avd.aquasec.com/nvd/cve-2023-25813)\nSequelize is a Node.js ORM tool. In versions prior to 6.19.1 a SQL injection exploit exists related to replacements. Parameters which are passed through replacements are not properly escaped which can lead to arbitrary SQL injection depending on the specific queries in use. The issue has been fixed in Sequelize 6.19.1. Users are advised to upgrade. Users unable to upgrade should not use the `replacements` and the `where` option in the same query.",
                "markdown": "**Vulnerability CVE-2023-25813**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|sequelize|6.19.1|[CVE-2023-25813](https://avd.aquasec.com/nvd/cve-2023-25813)|\n\nSequelize is a Node.js ORM tool. In versions prior to 6.19.1 a SQL injection exploit exists related to replacements. Parameters which are passed through replacements are not properly escaped which can lead to arbitrary SQL injection depending on the specific queries in use. The issue has been fixed in Sequelize 6.19.1. Users are advised to upgrade. Users unable to upgrade should not use the `replacements` and the `where` option in the same query."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "10.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "CRITICAL"
                ]
              }
            },
            {
              "id": "CVE-2023-22580",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "Sequelize information disclosure vulnerability"
              },
              "fullDescription": {
                "text": "Due to improper input filtering in the sequalize js library, can malicious queries lead to sensitive information disclosure."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2023-22580",
              "help": {
                "text": "Vulnerability CVE-2023-22580\nSeverity: MEDIUM\nPackage: sequelize\nFixed Version: 6.28.1\nLink: [CVE-2023-22580](https://avd.aquasec.com/nvd/cve-2023-22580)\nDue to improper input filtering in the sequalize js library, can malicious queries lead to sensitive information disclosure.",
                "markdown": "**Vulnerability CVE-2023-22580**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|sequelize|6.28.1|[CVE-2023-22580](https://avd.aquasec.com/nvd/cve-2023-22580)|\n\nDue to improper input filtering in the sequalize js library, can malicious queries lead to sensitive information disclosure."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.3",
                "tags": [
                  "vulnerability",
                  "security",
                  "MEDIUM"
                ]
              }
            },
            {
              "id": "CVE-2024-43800",
              "name": "LanguageSpecificPackageVulnerability",
              "shortDescription": {
                "text": "serve-static: Improper Sanitization in serve-static"
              },
              "fullDescription": {
                "text": "serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "helpUri": "https://avd.aquasec.com/nvd/cve-2024-43800",
              "help": {
                "text": "Vulnerability CVE-2024-43800\nSeverity: LOW\nPackage: serve-static\nFixed Version: 1.16.0, 2.1.0\nLink: [CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)\nserve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.",
                "markdown": "**Vulnerability CVE-2024-43800**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|LOW|serve-static|1.16.0, 2.1.0|[CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)|\n\nserve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0."
              },
              "properties": {
                "precision": "very-high",
                "security-severity": "5.0",
                "tags": [
                  "vulnerability",
                  "security",
                  "LOW"
                ]
              }
            }
          ],
          "version": "0.61.0"
        }
      },
      "results": [
        {
          "ruleId": "CVE-2024-45590",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Package: body-parser\nInstalled Version: 1.20.0\nVulnerability CVE-2024-45590\nSeverity: HIGH\nFixed Version: 1.20.3\nLink: [CVE-2024-45590](https://avd.aquasec.com/nvd/cve-2024-45590)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 1,
                  "endLine": 113,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: body-parser@1.20.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47764",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Package: cookie\nInstalled Version: 0.5.0\nVulnerability CVE-2024-47764\nSeverity: LOW\nFixed Version: 0.7.0\nLink: [CVE-2024-47764](https://avd.aquasec.com/nvd/cve-2024-47764)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 1,
                  "endLine": 213,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: cookie@0.5.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33883",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Package: ejs\nInstalled Version: 3.1.7\nVulnerability CVE-2024-33883\nSeverity: MEDIUM\nFixed Version: 3.1.10\nLink: [CVE-2024-33883](https://avd.aquasec.com/nvd/cve-2024-33883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 1,
                  "endLine": 267,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: ejs@3.1.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "Package: express\nInstalled Version: 4.18.1\nVulnerability CVE-2024-29041\nSeverity: MEDIUM\nFixed Version: 4.19.2, 5.0.0-beta.3\nLink: [CVE-2024-29041](https://avd.aquasec.com/nvd/cve-2024-29041)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 1,
                  "endLine": 329,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: express@4.18.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43796",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Package: express\nInstalled Version: 4.18.1\nVulnerability CVE-2024-43796\nSeverity: LOW\nFixed Version: 4.20.0, 5.0.0\nLink: [CVE-2024-43796](https://avd.aquasec.com/nvd/cve-2024-43796)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 1,
                  "endLine": 329,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: express@4.18.1"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45296",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Package: path-to-regexp\nInstalled Version: 0.1.7\nVulnerability CVE-2024-45296\nSeverity: HIGH\nFixed Version: 1.9.0, 0.1.10, 8.0.0, 3.3.0, 6.3.0\nLink: [CVE-2024-45296](https://avd.aquasec.com/nvd/cve-2024-45296)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 1,
                  "endLine": 663,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: path-to-regexp@0.1.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-52798",
          "ruleIndex": 6,
          "level": "error",
          "message": {
            "text": "Package: path-to-regexp\nInstalled Version: 0.1.7\nVulnerability CVE-2024-52798\nSeverity: HIGH\nFixed Version: 0.1.12\nLink: [CVE-2024-52798](https://avd.aquasec.com/nvd/cve-2024-52798)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 1,
                  "endLine": 663,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: path-to-regexp@0.1.7"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43799",
          "ruleIndex": 7,
          "level": "note",
          "message": {
            "text": "Package: send\nInstalled Version: 0.18.0\nVulnerability CVE-2024-43799\nSeverity: LOW\nFixed Version: 0.19.0\nLink: [CVE-2024-43799](https://avd.aquasec.com/nvd/cve-2024-43799)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 1,
                  "endLine": 908,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: send@0.18.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22578",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Package: sequelize\nInstalled Version: 6.19.0\nVulnerability CVE-2023-22578\nSeverity: CRITICAL\nFixed Version: 6.29.0\nLink: [CVE-2023-22578](https://avd.aquasec.com/nvd/cve-2023-22578)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 1,
                  "endLine": 971,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sequelize@6.19.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22579",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Package: sequelize\nInstalled Version: 6.19.0\nVulnerability CVE-2023-22579\nSeverity: CRITICAL\nFixed Version: 6.28.1\nLink: [CVE-2023-22579](https://avd.aquasec.com/nvd/cve-2023-22579)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 1,
                  "endLine": 971,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sequelize@6.19.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25813",
          "ruleIndex": 10,
          "level": "error",
          "message": {
            "text": "Package: sequelize\nInstalled Version: 6.19.0\nVulnerability CVE-2023-25813\nSeverity: CRITICAL\nFixed Version: 6.19.1\nLink: [CVE-2023-25813](https://avd.aquasec.com/nvd/cve-2023-25813)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 1,
                  "endLine": 971,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sequelize@6.19.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-22580",
          "ruleIndex": 11,
          "level": "warning",
          "message": {
            "text": "Package: sequelize\nInstalled Version: 6.19.0\nVulnerability CVE-2023-22580\nSeverity: MEDIUM\nFixed Version: 6.28.1\nLink: [CVE-2023-22580](https://avd.aquasec.com/nvd/cve-2023-22580)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 1,
                  "endLine": 971,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: sequelize@6.19.0"
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43800",
          "ruleIndex": 12,
          "level": "note",
          "message": {
            "text": "Package: serve-static\nInstalled Version: 1.15.0\nVulnerability CVE-2024-43800\nSeverity: LOW\nFixed Version: 1.16.0, 2.1.0\nLink: [CVE-2024-43800](https://avd.aquasec.com/nvd/cve-2024-43800)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package-lock.json",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "startLine": 1001,
                  "startColumn": 1,
                  "endLine": 1014,
                  "endColumn": 1
                }
              },
              "message": {
                "text": "package-lock.json: serve-static@1.15.0"
              }
            }
          ]
        }
      ],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///home/helioneto/aulas/programa-profissional-de-elite/ppde-docker-security/kube-news/src/"
        }
      }
    }
  ]
}